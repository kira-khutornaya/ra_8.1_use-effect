{"version":3,"sources":["hooks/useJsonFetch.js","components/LoaderCentered.js","components/Error.js","components/List.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["useJsonFetch","url","opts","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","a","fetch","response","ok","Error","statusText","json","fetchData","LoaderCentered","className","Loader","active","inline","message","style","color","defaultProps","List","findUser","process","map","el","onClick","aria-hidden","name","id","Details","info","height","alt","src","avatar","details","city","company","position","App","setInfo","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAEe,SAASA,EAAaC,GAAmB,IAAdC,EAAa,uDAAN,KAAM,EAC7BC,mBAAS,MADoB,mBAC9CC,EAD8C,KACxCC,EADwC,OAEnBF,oBAAS,GAFU,mBAE9CG,EAF8C,KAEnCC,EAFmC,OAG3BJ,mBAAS,MAHkB,mBAG9CK,EAH8C,KAGvCC,EAHuC,KA2BrD,OAtBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAa,GADG,kBAGSK,MAAMX,EAAKC,GAHpB,WAGRW,EAHQ,QAIAC,GAJA,sBAKN,IAAIC,MAAMF,EAASG,YALb,uBAQKH,EAASI,OARd,OAQRA,EARQ,OASdZ,EAAQY,GACRR,EAAS,MAVK,kDAYdA,EAAS,EAAD,IAZM,yBAcdF,GAAa,GAdC,6EAAH,qDAkBfW,KACC,CAACjB,EAAKC,IAEF,CAACE,EAAME,EAAWE,G,mBCpBZW,EANQ,kBACrB,qBAAKC,UAAU,oBAAf,SACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,OAAO,gBCF1B,SAASR,EAAT,GAA6B,IAAZS,EAAW,EAAXA,QACf,OACE,qBACEJ,UAAU,QACVK,MAAO,CAAEC,MAAO,OAFlB,SAIGF,IAKPT,EAAMY,aAAe,CACnBH,QAAS,yMAOIT,QCeAa,MA/Bf,YAA6B,IAAbC,EAAY,EAAZA,SAAY,EACO7B,EAAa,GAAD,OAAI8B,uGAAJ,eADnB,mBACnB1B,EADmB,KACbE,EADa,KACFE,EADE,KAG1B,OACE,qCACIF,GAAa,cAAC,EAAD,IACbE,GAAS,cAAC,EAAD,KACRF,GAAaF,GACd,oBAAIgB,UAAU,OAAd,SAEIhB,EAAK2B,KAAI,SAACC,GAAD,OACP,oBACEZ,UAAU,aACVa,QAAS,kBAAMJ,EAASG,IAExBE,eAAA,EAJF,SAMGF,EAAGG,MAHCH,EAAGI,aC4BTC,MA1Cf,YAA4B,IAATC,EAAQ,EAARA,KAAQ,EACQtC,EAAa,GAAD,OAAI8B,wGAAJ,OAAqCQ,EAAKF,GAA1C,UADpB,mBAClBhC,EADkB,KACZE,EADY,KACDE,EADC,KAGzB,OACE,qCACIF,GAAa,cAAC,EAAD,IACbE,GAAS,cAAC,EAAD,KACRF,GAAaF,GACd,sBAAKgB,UAAU,UAAf,UACE,qBACEA,UAAU,kBACVmB,OAAO,QACPC,IAAKpC,EAAK+B,KACVM,IAAKrC,EAAKsC,SAGZ,oBAAItB,UAAU,gBAAd,SAA+BhB,EAAK+B,OAEpC,qBAAIf,UAAU,gBAAd,UACE,oBAAIA,UAAU,qBAAd,yBACYhB,EAAKuC,QAAQC,QAEzB,oBAAIxB,UAAU,qBAAd,4BACehB,EAAKuC,QAAQE,WAE5B,oBAAIzB,UAAU,qBAAd,6BACgBhB,EAAKuC,QAAQG,sBC3B1B,SAASC,IAAO,IAAD,EACJ5C,mBAAS,IADL,mBACrBmC,EADqB,KACfU,EADe,KAI5B,OACE,qBAAK5B,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAMS,SALK,SAACoB,GAAD,OAAUD,EAAQC,MAM3BX,EAAKF,GAAK,cAAC,EAAD,CAASE,KAAMA,IAAW,UCb9C,IAceY,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.89149a7b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useJsonFetch(url, opts = null) {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(url, opts);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const json = await response.json();\n        setData(json);\n        setError(null);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url, opts]);\n\n  return [data, isLoading, error];\n}\n","import React from 'react';\nimport { Loader } from 'semantic-ui-react';\n\nconst LoaderCentered = () => (\n  <div className=\"Loader__container\">\n    <Loader active inline=\"centered\" />\n  </div>\n);\n\nexport default LoaderCentered;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Error({ message }) {\n  return (\n    <div\n      className=\"Error\"\n      style={{ color: 'red' }}\n    >\n      {message}\n    </div>\n  );\n}\n\nError.defaultProps = {\n  message: 'Произошла ошибка при загрузке данных!',\n};\n\nError.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useJsonFetch from '../hooks/useJsonFetch';\nimport LoaderCentered from './LoaderCentered';\nimport Error from './Error';\n\nfunction List({ findUser }) {\n  const [data, isLoading, error] = useJsonFetch(`${process.env.REACT_APP_DATA_URL}users.json`);\n\n  return (\n    <>\n      { isLoading && <LoaderCentered />}\n      { error && <Error /> }\n      { !isLoading && data && (\n        <ul className=\"List\">\n          {\n            data.map((el) => (\n              <li\n                className=\"List__item\"\n                onClick={() => findUser(el)}\n                key={el.id}\n                aria-hidden\n              >\n                {el.name}\n              </li>\n            ))\n          }\n        </ul>\n      )}\n    </>\n  );\n}\n\nList.propTypes = {\n  findUser: PropTypes.func.isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useJsonFetch from '../hooks/useJsonFetch';\nimport LoaderCentered from './LoaderCentered';\nimport Error from './Error';\n\nfunction Details({ info }) {\n  const [data, isLoading, error] = useJsonFetch(`${process.env.REACT_APP_DATA_URL}${info.id}.json`);\n\n  return (\n    <>\n      { isLoading && <LoaderCentered /> }\n      { error && <Error /> }\n      { !isLoading && data && (\n        <div className=\"Details\">\n          <img\n            className=\"Details__avatar\"\n            height=\"300px\"\n            alt={data.name}\n            src={data.avatar}\n          />\n\n          <h2 className=\"Details__name\">{data.name}</h2>\n\n          <ul className=\"Details__list\">\n            <li className=\"Details-list__item\">\n              {`City: ${data.details.city}`}\n            </li>\n            <li className=\"Details-list__item\">\n              {`Company: ${data.details.company}`}\n            </li>\n            <li className=\"Details-list__item\">\n              {`Position: ${data.details.position}`}\n            </li>\n          </ul>\n        </div>\n      ) }\n    </>\n  );\n}\n\nDetails.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport Details from './components/Details';\n\nexport default function App() {\n  const [info, setInfo] = useState({});\n  const findUser = (user) => setInfo(user);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__container\">\n        <List findUser={findUser} />\n        { info.id ? <Details info={info} /> : null }\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}